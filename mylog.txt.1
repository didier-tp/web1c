2017-09-01 09:56:03,097 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client
2017-09-01 09:56:03,098 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6050462a]
2017-09-01 09:56:03,098 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2017-09-01 09:56:03,098 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : dateResa
2017-09-01 09:56:03,098 DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2017-09-01 09:56:03,098 DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.sopra.resa.model.Resa)
    - Returns
       - EntityReturnImpl(entity=com.sopra.resa.model.Resa, querySpaceUid=<gen:0>, path=com.sopra.resa.model.Resa)
          - EntityAttributeFetchImpl(entity=com.sopra.resa.model.Client, querySpaceUid=<gen:1>, path=com.sopra.resa.model.Resa.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.sopra.resa.model.Resa)
          - SQL table alias mapping - resa0_
          - alias suffix - 0_
          - suffixed key columns - {idResa1_2_0_}

2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.sopra.resa.model.Resa [PESSIMISTIC_FORCE_INCREMENT]: select resa0_.idResa as idResa1_2_0_, resa0_.idClient as idClient4_2_0_, resa0_.comment as comment2_2_0_, resa0_.dateResa as dateResa3_2_0_ from Resa resa0_ where resa0_.idResa=? for update nowait 
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0884e8]
2017-09-01 09:56:03,099 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11841b15]
2017-09-01 09:56:03,099 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2017-09-01 09:56:03,099 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : dateResa
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.sopra.resa.model.Resa)
    - Returns
       - EntityReturnImpl(entity=com.sopra.resa.model.Resa, querySpaceUid=<gen:0>, path=com.sopra.resa.model.Resa)
          - EntityAttributeFetchImpl(entity=com.sopra.resa.model.Client, querySpaceUid=<gen:1>, path=com.sopra.resa.model.Resa.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.sopra.resa.model.Resa)
          - SQL table alias mapping - resa0_
          - alias suffix - 0_
          - suffixed key columns - {idResa1_2_0_}

2017-09-01 09:56:03,099 DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.sopra.resa.model.Resa [OPTIMISTIC]: select resa0_.idResa as idResa1_2_0_, resa0_.idClient as idClient4_2_0_, resa0_.comment as comment2_2_0_, resa0_.dateResa as dateResa3_2_0_ from Resa resa0_ where resa0_.idResa=?
2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73877e19]
2017-09-01 09:56:03,100 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client
2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfc257]
2017-09-01 09:56:03,100 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2017-09-01 09:56:03,100 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : dateResa
2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.sopra.resa.model.Resa)
    - Returns
       - EntityReturnImpl(entity=com.sopra.resa.model.Resa, querySpaceUid=<gen:0>, path=com.sopra.resa.model.Resa)
          - EntityAttributeFetchImpl(entity=com.sopra.resa.model.Client, querySpaceUid=<gen:1>, path=com.sopra.resa.model.Resa.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.sopra.resa.model.Resa)
          - SQL table alias mapping - resa0_
          - alias suffix - 0_
          - suffixed key columns - {idResa1_2_0_}

2017-09-01 09:56:03,100 DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.sopra.resa.model.Resa [OPTIMISTIC_FORCE_INCREMENT]: select resa0_.idResa as idResa1_2_0_, resa0_.idClient as idClient4_2_0_, resa0_.comment as comment2_2_0_, resa0_.dateResa as dateResa3_2_0_ from Resa resa0_ where resa0_.idResa=?
2017-09-01 09:56:03,101 DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.sopra.resa.model.Resa: select resa0_.idResa as idResa1_2_0_, resa0_.idClient as idClient4_2_0_, resa0_.comment as comment2_2_0_, resa0_.dateResa as dateResa3_2_0_ from Resa resa0_ where resa0_.idResa=?
2017-09-01 09:56:03,101 DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.sopra.resa.model.Resa: select resa0_.idResa as idResa1_2_0_, resa0_.idClient as idClient4_2_0_, resa0_.comment as comment2_2_0_, resa0_.dateResa as dateResa3_2_0_ from Resa resa0_ where resa0_.idResa=?
2017-09-01 09:56:03,106 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4078695f]
2017-09-01 09:56:03,107 DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a1728c]
2017-09-01 09:56:03,107 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client
2017-09-01 09:56:03,108 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : client
2017-09-01 09:56:03,108 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : comment
2017-09-01 09:56:03,108 DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : dateResa
2017-09-01 09:56:03,108 DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2017-09-01 09:56:03,111 DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2017-09-01 09:56:03,112 DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=com.sopra.resa.model.Client.listeResa)
    - Returns
       - CollectionReturnImpl(collection=com.sopra.resa.model.Client.listeResa, querySpaceUid=<gen:0>, path=[com.sopra.resa.model.Client.listeResa])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.sopra.resa.model.Resa, querySpaceUid=<gen:1>, path=[com.sopra.resa.model.Client.listeResa].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.sopra.resa.model.Client.listeResa)
          - SQL table alias mapping - listeresa0_
          - alias suffix - 0_
          - suffixed key columns - {idClient4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - idResa1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.sopra.resa.model.Resa)
                - SQL table alias mapping - listeresa0_
                - alias suffix - 1_
                - suffixed key columns - {idResa1_2_1_}

2017-09-01 09:56:03,113 DEBUG main org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection com.sopra.resa.model.Client.listeResa: select listeresa0_.idClient as idClient4_2_0_, listeresa0_.idResa as idResa1_2_0_, listeresa0_.idResa as idResa1_2_1_, listeresa0_.idClient as idClient4_2_1_, listeresa0_.comment as comment2_2_1_, listeresa0_.dateResa as dateResa3_2_1_ from Resa listeresa0_ where listeresa0_.idClient=?
2017-09-01 09:56:03,154 DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2017-09-01 09:56:03,154 DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2017-09-01 09:56:03,155 DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-09-01 09:56:03,164 DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-09-01 09:56:03,165 DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 2 named HQL queries
2017-09-01 09:56:03,165 DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking named query: Client.findByName
2017-09-01 09:56:03,173 DEBUG main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70abf9b0
2017-09-01 09:56:03,173 INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2017-09-01 09:56:03,222 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c FROM com.sopra.resa.model.Client c WHERE c.nom = :pnom
2017-09-01 09:56:03,227 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'sopra'
    |  |     |  |  |  \-[IDENT] Node: 'resa'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'nom'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnom'

2017-09-01 09:56:03,227 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,258 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2017-09-01 09:56:03,274 DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.sopra.resa.model.Client (c) -> client0_
2017-09-01 09:56:03,274 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> client0_.id
2017-09-01 09:56:03,289 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> client0_.id
2017-09-01 09:56:03,289 DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : nom -> org.hibernate.type.StringType@30c8681
2017-09-01 09:56:03,289 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c.nom -> client0_.lastName
2017-09-01 09:56:03,289 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2017-09-01 09:56:03,289 DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} Customer client0_ ) ( WHERE ( = ( client0_.lastName client0_.id nom ) ? ) ) )
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Customer client0_]
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=c, className=com.sopra.resa.model.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.lastName as lastName2_0_, client0_.firstName as firstNam3_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Customer client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Customer,tableAlias=client0_,origin=null,columns={,className=com.sopra.resa.model.Client}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.lastName' {propertyName=nom,dereferenceType=PRIMITIVE,getPropertyPath=nom,path=c.nom,tableAlias=client0_,className=com.sopra.resa.model.Client,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=c, className=com.sopra.resa.model.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'nom' {originalText=nom}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnom, expectedType=org.hibernate.type.StringType@30c8681}

2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c FROM com.sopra.resa.model.Client c WHERE c.nom = :pnom
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select client0_.id as id1_0_, client0_.lastName as lastName2_0_, client0_.firstName as firstNam3_0_ from Customer client0_ where client0_.lastName=?
2017-09-01 09:56:03,305 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,320 DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking named query: Login.findByUsername
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT l FROM com.sopra.resa.model.Login l WHERE l.username = :pusername
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'sopra'
    |  |     |  |  |  \-[IDENT] Node: 'resa'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Login'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pusername'

2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.sopra.resa.model.Login (l) -> login0_
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : l -> login0_.id
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : l -> login0_.id
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@30c8681
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : l.username -> login0_.username
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} login0_.id ) ( FromClause{level=1} Login login0_ ) ( WHERE ( = ( login0_.username login0_.id username ) ? ) ) )
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Login login0_]
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Login)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'login0_.id as id1_1_' {alias=l, className=com.sopra.resa.model.Login, tableAlias=login0_}
    |  \-[SQL_TOKEN] SqlFragment: 'login0_.password as password2_1_, login0_.username as username3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[login0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Login login0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=Login,tableAlias=login0_,origin=null,columns={,className=com.sopra.resa.model.Login}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'login0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=l.username,tableAlias=login0_,className=com.sopra.resa.model.Login,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'login0_.id' {alias=l, className=com.sopra.resa.model.Login, tableAlias=login0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pusername, expectedType=org.hibernate.type.StringType@30c8681}

2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT l FROM com.sopra.resa.model.Login l WHERE l.username = :pusername
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select login0_.id as id1_1_, login0_.password as password2_1_, login0_.username as username3_1_ from Login login0_ where login0_.username=?
2017-09-01 09:56:03,320 DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-09-01 09:56:03,320 DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2017-09-01 09:56:03,320 DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7fc645e4
2017-09-01 09:56:03,320 DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 1f1bbfb4-4135-4cd7-9796-5c5db2d156a0 (<unnamed>)
2017-09-01 09:56:03,320 DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2017-09-01 09:56:03,320 INFO main org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'customers_pu'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'myEmf'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@341b80b2: defining beans [myDataSource,myEmf,txManager,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,daoClientHibernate,daoLoginHibernate,serviceClientImpl,myLogAspect]; root of factory hierarchy
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myDataSource'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myEmf'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'txManager'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'txManager'
2017-09-01 09:56:03,336 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myEmf'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'txManager'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'txManager'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-09-01 09:56:03,352 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'daoClientHibernate'
2017-09-01 09:56:03,367 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'daoClientHibernate'
2017-09-01 09:56:03,383 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.sopra.resa.dao.hibernate.DaoClientHibernate]: PersistenceElement for protected javax.persistence.EntityManager com.sopra.resa.dao.hibernate.DaoGenericImpl.em
2017-09-01 09:56:03,383 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'daoClientHibernate' to allow for resolving potential circular references
2017-09-01 09:56:03,383 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'daoClientHibernate': PersistenceElement for protected javax.persistence.EntityManager com.sopra.resa.dao.hibernate.DaoGenericImpl.em
2017-09-01 09:56:03,383 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myEmf'
2017-09-01 09:56:03,398 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,398 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoClientHibernate.findClientByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,414 DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'daoClientHibernate' with 0 common interceptors and 1 specific interceptors
2017-09-01 09:56:03,414 DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sopra.resa.dao.hibernate.DaoClientHibernate@15dd5ac2]
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'daoClientHibernate'
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'daoLoginHibernate'
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'daoLoginHibernate'
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.sopra.resa.dao.hibernate.DaoLoginHibernate]: PersistenceElement for protected javax.persistence.EntityManager com.sopra.resa.dao.hibernate.DaoGenericImpl.em
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'daoLoginHibernate' to allow for resolving potential circular references
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'daoLoginHibernate': PersistenceElement for protected javax.persistence.EntityManager com.sopra.resa.dao.hibernate.DaoGenericImpl.em
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myEmf'
2017-09-01 09:56:03,414 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,414 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoLoginHibernate.findLoginByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,414 DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'daoLoginHibernate' with 0 common interceptors and 1 specific interceptors
2017-09-01 09:56:03,414 DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sopra.resa.dao.hibernate.DaoLoginHibernate@486bc9a4]
2017-09-01 09:56:03,430 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'daoLoginHibernate'
2017-09-01 09:56:03,430 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceClientImpl'
2017-09-01 09:56:03,430 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'serviceClientImpl'
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.sopra.resa.service.ServiceClientImpl]: AutowiredFieldElement for private com.sopra.resa.dao.DaoClient com.sopra.resa.service.ServiceClientImpl.daoClient
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.sopra.resa.service.ServiceClientImpl]: AutowiredFieldElement for private com.sopra.resa.dao.DaoLogin com.sopra.resa.service.ServiceClientImpl.daoLogin
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'serviceClientImpl' to allow for resolving potential circular references
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'serviceClientImpl': AutowiredFieldElement for private com.sopra.resa.dao.DaoClient com.sopra.resa.service.ServiceClientImpl.daoClient
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'daoClientHibernate'
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'serviceClientImpl' to bean named 'daoClientHibernate'
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'serviceClientImpl': AutowiredFieldElement for private com.sopra.resa.dao.DaoLogin com.sopra.resa.service.ServiceClientImpl.daoLogin
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'daoLoginHibernate'
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'serviceClientImpl' to bean named 'daoLoginHibernate'
2017-09-01 09:56:03,445 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,461 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.service.ServiceClientImpl.rechercherClient' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,461 DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'serviceClientImpl' with 0 common interceptors and 1 specific interceptors
2017-09-01 09:56:03,461 DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.sopra.resa.service.ServiceClientImpl@6e57b5e9]
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'serviceClientImpl'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'myLogAspect'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'myLogAspect'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'myLogAspect' to allow for resolving potential circular references
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'myLogAspect'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2017-09-01 09:56:03,461 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2017-09-01 09:56:03,496 DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@64c4c01]
2017-09-01 09:56:03,497 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
2017-09-01 09:56:03,499 DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2017-09-01 09:56:03,502 DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2017-09-01 09:56:03,502 DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@46d9aec8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
2017-09-01 09:56:03,504 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'com.sopra.resa.test.ResaTest': AutowiredFieldElement for private com.sopra.resa.service.ServiceClient com.sopra.resa.test.ResaTest.serviceClient
2017-09-01 09:56:03,505 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceClientImpl'
2017-09-01 09:56:03,505 DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.sopra.resa.test.ResaTest' to bean named 'serviceClientImpl'
2017-09-01 09:56:03,505 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-09-01 09:56:03,510 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@192b07fd, testMethod = testRechercherClientAvecResa@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:03,513 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-09-01 09:56:03,515 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.service.ServiceClientImpl.rechercherClientAvecResa' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,518 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2017-09-01 09:56:03,522 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.rechercherClientAvecResa]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,632 DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2017-09-01 09:56:03,632 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,632 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:03,632 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:03,663 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9a6fbc0]
2017-09-01 09:56:03,663 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoClientHibernate.findByKey' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,663 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,663 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,678 DEBUG main org.hibernate.SQL - 
    select
        client0_.id as id1_0_0_,
        client0_.lastName as lastName2_0_0_,
        client0_.firstName as firstNam3_0_0_,
        login1_.id as id1_1_1_,
        login1_.password as password2_1_1_,
        login1_.username as username3_1_1_ 
    from
        Customer client0_ 
    left outer join
        Login login1_ 
            on client0_.id=login1_.id 
    where
        client0_.id=?
2017-09-01 09:56:03,694 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:03,694 DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-09-01 09:56:03,710 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Client#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Client#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Login#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Login#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.sopra.resa.model.Client#1
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.sopra.resa.model.Client.listeResa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.SQL - 
    select
        listeresa0_.idClient as idClient4_2_0_,
        listeresa0_.idResa as idResa1_2_0_,
        listeresa0_.idResa as idResa1_2_1_,
        listeresa0_.idClient as idClient4_2_1_,
        listeresa0_.comment as comment2_2_1_,
        listeresa0_.dateResa as dateResa3_2_1_ 
    from
        Resa listeresa0_ 
    where
        listeresa0_.idClient=?
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection intializer : [com.sopra.resa.model.Client.listeResa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.sopra.resa.model.Client.listeResa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #1
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.sopra.resa.model.Client.listeResa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Resa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Resa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Resa#2]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Resa#2]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.sopra.resa.model.Client.listeResa
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.sopra.resa.model.Client.listeResa#1]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.sopra.resa.model.Client.listeResa
2017-09-01 09:56:03,718 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,718 DEBUG main org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
2017-09-01 09:56:03,718 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2017-09-01 09:56:03,718 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#1], EntityKey[com.sopra.resa.model.Resa#1], EntityKey[com.sopra.resa.model.Client#1], EntityKey[com.sopra.resa.model.Resa#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-09-01 09:56:03,718 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
2017-09-01 09:56:03,718 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2017-09-01 09:56:03,733 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2017-09-01 09:56:03,733 DEBUG main org.hibernate.engine.internal.Collections - Collection found: [com.sopra.resa.model.Client.listeResa#1], was: [com.sopra.resa.model.Client.listeResa#1] (initialized)
2017-09-01 09:56:03,733 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2017-09-01 09:56:03,733 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2017-09-01 09:56:03,733 DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
2017-09-01 09:56:03,733 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Login{password=pwd007, idClient=1, client=com.sopra.resa.model.Client#1, username=alex-therieur}
2017-09-01 09:56:03,733 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Resa{dateResa=2017-08-15, idResa=1, client=com.sopra.resa.model.Client#1, comment=resa aaa}
2017-09-01 09:56:03,733 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Client{idClient=1, listeResa=[com.sopra.resa.model.Resa#1, com.sopra.resa.model.Resa#2], login=com.sopra.resa.model.Login#1, nom=Therieur, prenom=alex}
2017-09-01 09:56:03,733 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Resa{dateResa=2017-08-17, idResa=2, client=com.sopra.resa.model.Client#1, comment=resa bbb}
2017-09-01 09:56:03,733 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#1], EntityKey[com.sopra.resa.model.Resa#1], EntityKey[com.sopra.resa.model.Client#1], EntityKey[com.sopra.resa.model.Resa#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2017-09-01 09:56:03,733 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@192b07fd, testMethod = testRechercherClientAvecResa@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@5176d279, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@46d9aec8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
2017-09-01 09:56:03,749 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'com.sopra.resa.test.ResaTest': AutowiredFieldElement for private com.sopra.resa.service.ServiceClient com.sopra.resa.test.ResaTest.serviceClient
2017-09-01 09:56:03,749 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceClientImpl'
2017-09-01 09:56:03,749 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@5176d279, testMethod = testRechercherClient@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:03,749 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.rechercherClient]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,749 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,749 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:03,749 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:03,764 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@373f7450]
2017-09-01 09:56:03,764 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,764 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,780 DEBUG main org.hibernate.SQL - 
    select
        client0_.id as id1_0_0_,
        client0_.lastName as lastName2_0_0_,
        client0_.firstName as firstNam3_0_0_,
        login1_.id as id1_1_1_,
        login1_.password as password2_1_1_,
        login1_.username as username3_1_1_ 
    from
        Customer client0_ 
    left outer join
        Login login1_ 
            on client0_.id=login1_.id 
    where
        client0_.id=?
2017-09-01 09:56:03,780 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:03,780 DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Client#1]
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Client#1]
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Login#1]
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Login#1]
2017-09-01 09:56:03,780 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,780 DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.sopra.resa.model.Client#1
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#1], EntityKey[com.sopra.resa.model.Client#1]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
2017-09-01 09:56:03,780 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2017-09-01 09:56:03,780 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.internal.Collections - Collection found: [com.sopra.resa.model.Client.listeResa#1], was: [com.sopra.resa.model.Client.listeResa#1] (uninitialized)
2017-09-01 09:56:03,780 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-09-01 09:56:03,780 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2017-09-01 09:56:03,780 DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
2017-09-01 09:56:03,780 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Login{password=pwd007, idClient=1, client=com.sopra.resa.model.Client#1, username=alex-therieur}
2017-09-01 09:56:03,780 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Client{idClient=1, listeResa=<uninitialized>, login=com.sopra.resa.model.Login#1, nom=Therieur, prenom=alex}
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#1], EntityKey[com.sopra.resa.model.Client#1]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@5176d279, testMethod = testRechercherClient@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@c1fca2a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@46d9aec8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
2017-09-01 09:56:03,780 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'com.sopra.resa.test.ResaTest': AutowiredFieldElement for private com.sopra.resa.service.ServiceClient com.sopra.resa.test.ResaTest.serviceClient
2017-09-01 09:56:03,780 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceClientImpl'
2017-09-01 09:56:03,780 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@c1fca2a, testMethod = testValidInsertClientWithLogin@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:03,780 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.service.ServiceClientImpl.insertClientWithLogin' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.insertClientWithLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,780 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,780 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:03,780 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:03,847 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5533dc72]
2017-09-01 09:56:03,848 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoClientHibernate.insert' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,848 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,848 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,855 DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2017-09-01 09:56:03,857 DEBUG main org.hibernate.SQL - 
    insert 
    into
        Customer
        (lastName, firstName) 
    values
        (?, ?)
2017-09-01 09:56:03,865 DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 2
2017-09-01 09:56:03,865 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,867 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoLoginHibernate.insert' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,867 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,867 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,868 DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.Assigned
2017-09-01 09:56:03,870 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2017-09-01 09:56:03,870 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=1} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-09-01 09:56:03,870 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
2017-09-01 09:56:03,870 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2017-09-01 09:56:03,870 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2017-09-01 09:56:03,870 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2017-09-01 09:56:03,870 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-09-01 09:56:03,870 DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
2017-09-01 09:56:03,870 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Login{password=passwordYy, idClient=2, client=null, username=usernameXx}
2017-09-01 09:56:03,871 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Client{idClient=2, listeResa=null, login=com.sopra.resa.model.Login#2, nom=nomXx, prenom=prenomYy}
2017-09-01 09:56:03,883 DEBUG main org.hibernate.SQL - 
    insert 
    into
        Login
        (password, username, id) 
    values
        (?, ?, ?)
2017-09-01 09:56:03,889 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2017-09-01 09:56:03,889 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2017-09-01 09:56:03,889 DEBUG main org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2017-09-01 09:56:03,889 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.rechercherClient]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,889 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,889 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:03,889 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:03,915 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6b0615ae]
2017-09-01 09:56:03,916 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,916 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,917 DEBUG main org.hibernate.SQL - 
    select
        client0_.id as id1_0_0_,
        client0_.lastName as lastName2_0_0_,
        client0_.firstName as firstNam3_0_0_,
        login1_.id as id1_1_1_,
        login1_.password as password2_1_1_,
        login1_.username as username3_1_1_ 
    from
        Customer client0_ 
    left outer join
        Login login1_ 
            on client0_.id=login1_.id 
    where
        client0_.id=?
2017-09-01 09:56:03,921 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:03,922 DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-09-01 09:56:03,922 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Client#2]
2017-09-01 09:56:03,923 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Client#2]
2017-09-01 09:56:03,923 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Login#2]
2017-09-01 09:56:03,923 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Login#2]
2017-09-01 09:56:03,923 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,923 DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.sopra.resa.model.Client#2
2017-09-01 09:56:03,923 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2017-09-01 09:56:03,924 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-09-01 09:56:03,924 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
2017-09-01 09:56:03,924 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2017-09-01 09:56:03,924 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2017-09-01 09:56:03,924 DEBUG main org.hibernate.engine.internal.Collections - Collection found: [com.sopra.resa.model.Client.listeResa#2], was: [com.sopra.resa.model.Client.listeResa#2] (uninitialized)
2017-09-01 09:56:03,924 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-09-01 09:56:03,924 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2017-09-01 09:56:03,924 DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
2017-09-01 09:56:03,924 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Login{password=passwordYy, idClient=2, client=com.sopra.resa.model.Client#2, username=usernameXx}
2017-09-01 09:56:03,925 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Client{idClient=2, listeResa=<uninitialized>, login=com.sopra.resa.model.Login#2, nom=nomXx, prenom=prenomYy}
2017-09-01 09:56:03,925 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2017-09-01 09:56:03,925 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2017-09-01 09:56:03,927 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.service.ServiceClientImpl.supprimerClientWithLogin' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,927 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.supprimerClientWithLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:03,927 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,927 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:03,927 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:03,971 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3659d7b1]
2017-09-01 09:56:03,971 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,971 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,971 DEBUG main org.hibernate.SQL - 
    select
        client0_.id as id1_0_0_,
        client0_.lastName as lastName2_0_0_,
        client0_.firstName as firstNam3_0_0_,
        login1_.id as id1_1_1_,
        login1_.password as password2_1_1_,
        login1_.username as username3_1_1_ 
    from
        Customer client0_ 
    left outer join
        Login login1_ 
            on client0_.id=login1_.id 
    where
        client0_.id=?
2017-09-01 09:56:03,975 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:03,976 DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-09-01 09:56:03,976 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Client#2]
2017-09-01 09:56:03,976 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Client#2]
2017-09-01 09:56:03,976 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Login#2]
2017-09-01 09:56:03,977 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.sopra.resa.model.Login#2]
2017-09-01 09:56:03,977 DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
2017-09-01 09:56:03,977 DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.sopra.resa.model.Client#2
2017-09-01 09:56:03,977 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoLoginHibernate.findByKey' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,978 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,978 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,978 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoLoginHibernate.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,978 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,978 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,985 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.dao.hibernate.DaoClientHibernate.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2017-09-01 09:56:03,986 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:03,986 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:03,986 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2017-09-01 09:56:03,986 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.sopra.resa.model.Login#2], EntityKey[com.sopra.resa.model.Client#2]],collectionKeys=[CollectionKey[com.sopra.resa.model.Client.listeResa#2]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-09-01 09:56:03,986 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
2017-09-01 09:56:03,986 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2017-09-01 09:56:03,986 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2017-09-01 09:56:03,987 DEBUG main org.hibernate.engine.internal.Collections - Collection dereferenced: [com.sopra.resa.model.Client.listeResa#2]
2017-09-01 09:56:03,987 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
2017-09-01 09:56:03,987 DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
2017-09-01 09:56:03,987 DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
2017-09-01 09:56:03,988 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Login{password=passwordYy, idClient=2, client=com.sopra.resa.model.Client#2, username=usernameXx}
2017-09-01 09:56:03,988 DEBUG main org.hibernate.internal.util.EntityPrinter - com.sopra.resa.model.Client{idClient=2, listeResa=<uninitialized>, login=com.sopra.resa.model.Login#2, nom=nomXx, prenom=prenomYy}
2017-09-01 09:56:03,988 DEBUG main org.hibernate.SQL - 
    delete 
    from
        Login 
    where
        id=?
2017-09-01 09:56:03,998 DEBUG main org.hibernate.SQL - 
    delete 
    from
        Customer 
    where
        id=?
2017-09-01 09:56:04,016 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
2017-09-01 09:56:04,016 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2017-09-01 09:56:04,016 DEBUG main org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2017-09-01 09:56:04,017 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@c1fca2a, testMethod = testValidInsertClientWithLogin@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:04,017 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:04,017 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.sopra.resa.test.ResaTest]
2017-09-01 09:56:04,017 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@470a659f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2017-09-01 09:56:04,018 DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2017-09-01 09:56:04,018 DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@46d9aec8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
2017-09-01 09:56:04,018 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'com.sopra.resa.test.ResaTest': AutowiredFieldElement for private com.sopra.resa.service.ServiceClient com.sopra.resa.test.ResaTest.serviceClient
2017-09-01 09:56:04,018 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceClientImpl'
2017-09-01 09:56:04,018 DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4b952a2d testClass = ResaTest, testInstance = com.sopra.resa.test.ResaTest@470a659f, testMethod = testRechercherClientByName@ResaTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3159c4b8 testClass = ResaTest, locations = '{classpath:/configSpring.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-09-01 09:56:04,019 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'com.sopra.resa.service.ServiceClientImpl.findClientByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:04,019 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.sopra.resa.service.ServiceClientImpl.findClientByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-09-01 09:56:04,019 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:04,019 DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
2017-09-01 09:56:04,019 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:postgresql://localhost:5432/formationspring]
2017-09-01 09:56:04,058 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@451882b2]
2017-09-01 09:56:04,059 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
2017-09-01 09:56:04,059 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2017-09-01 09:56:04,079 DEBUG main org.hibernate.SQL - 
    select
        client0_.id as id1_0_,
        client0_.lastName as lastName2_0_,
        client0_.firstName as firstNam3_0_ 
    from
        Customer client0_ 
    where
        client0_.lastName=?
2017-09-01 09:56:04,083 DEBUG main org.hibernate.loader.Loader - Result set row: 0
2017-09-01 09:56:04,083 DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.sopra.resa.model.Client#1]
2017-09-01 09:56:04,083 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Client#1]
2017-09-01 09:56:04,083 DEBUG main org.hibernate.SQL - 
    select
        login0_.id as id1_1_0_,
        login0_.password as password2_1_0_,
        login0_.username as username3_1_0_,
        client1_.id as id1_0_1_,
        client1_.lastName as lastName2_0_1_,
        client1_.firstName as firstNam3_0_1_ 
    from
        Login login0_ 
    left outer join
        Customer client1_ 
            on login0_.id=client1_.id 
    where
        login0_.id=?
2017-09-01 09:56:04,085 DEBUG main org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
2017-09-01 09:56:04,085 DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-09-01 09:56:04,085 DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.sopra.resa.model.Login#1]
